services:
  zookeeper:
    image: zookeeper:3.6.3
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test-topic:1:1"
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  postgres:
    image: postgres:latest
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - my_volume:/var/lib/postgresql/data
    networks: 
      - kafka-network

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - my_volume:/data
    networks:
      - kafka-network

  kafka-producer:
    build:
      context: ./kafka-producer
      dockerfile: Dockerfile
    container_name: kafka-producer
    depends_on:
      - kafka
    environment:
      KAFKA_SERVER: "kafka:9092"
      ZOOKEEPER_SERVER: "zookeeper:32181"
    networks:
      - kafka-network

  kafka-consumer:
    build:
      context: ./kafka-consumer
      dockerfile: Dockerfile
    container_name: kafka-consumer
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_SERVER: "kafka:9092"
      ZOOKEEPER_SERVER: "zookeeper:32181"
    networks:
      - kafka-network

volumes:
  my_volume:

networks:
  kafka-network:
    driver: bridge